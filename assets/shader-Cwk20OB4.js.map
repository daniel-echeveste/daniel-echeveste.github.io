{"version":3,"file":"shader-Cwk20OB4.js","sources":["../../src/shaders/slicedModel/vertex.glsl","../../src/shaders/slicedModel/fragment.glsl","../../src/shaders/slicedModel/shader.jsx"],"sourcesContent":["varying vec3 vPosition;\r\nvoid main(){\r\n    vPosition = position;\r\n}","uniform float uSliceStart;\r\nuniform float uSliceArc;\r\n\r\nvarying vec3 vPosition;\r\n\r\nvoid main(){\r\n\r\n\r\n    float angle = atan(vPosition.y,vPosition.x);\r\n    angle -= uSliceStart;\r\n    angle = mod(angle, PI2);\r\n    if(angle > 0.0 && angle < uSliceArc){\r\n        discard;\r\n    }\r\n   float csm_Slice;\r\n  //  csm_FragColor = vec4(vec3(angle),1.0);\r\n}","\r\nimport { useControls } from \"leva\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport * as THREE from \"three\";\r\nimport { useGLTF } from \"@react-three/drei\";\r\nimport { useRef } from \"react\";\r\nimport CustomShaderMaterial from \"three-custom-shader-material/vanilla\";\r\nimport vertexShader from \"./vertex.glsl\";\r\nimport fragmentShader from \"./fragment.glsl\";\r\nexport default function SlicedModel() {\r\n\r\n    const sizes = {\r\n        width: window.innerWidth,\r\n        height: window.innerHeight\r\n    }\r\n    const controls = useControls({\r\n        sliceStart: { value: 1.0, min: - Math.PI, max: Math.PI },\r\n        sliceArc: { value: 1.5, min: 0, max: Math.PI * 2 },\r\n    })\r\n    const uniforms = {\r\n        uTime: new THREE.Uniform(0),\r\n        uSliceStart: new THREE.Uniform(controls.sliceStart),\r\n        uSliceArc: new THREE.Uniform(controls.sliceArc),\r\n    }\r\n    const patchMap = {\r\n        csm_Slice: {\r\n            '#include <colorspace_fragment>':\r\n                `\r\n                #include <colorspace_fragment>\r\n                \r\n                if(!gl_FrontFacing)\r\n                    gl_FragColor = vec4(0.75, 0.15, 0.3, 1.0);\r\n            `\r\n        }\r\n    }\r\n\r\n    const gearModelRef = useRef()\r\n    const gearModel = useGLTF('models/gear/gears.glb')\r\n    const material = new THREE.MeshStandardMaterial({\r\n        color: new THREE.Color(\"#FF0000\"),\r\n        roughness: 0.25,\r\n        metalness: 0.5,\r\n        envMapIntensity: 0.5\r\n    })\r\n    const slicedMaterial = new CustomShaderMaterial({\r\n        // CSM   \r\n        baseMaterial: material,\r\n        vertexShader: vertexShader,\r\n        fragmentShader: fragmentShader,\r\n        silent: true,\r\n        patchMap: patchMap,\r\n\r\n        //mesh Standard Material\r\n        color: new THREE.Color(\"#858080\"),\r\n        roughness: 0.25,\r\n        metalness: 0.5,\r\n        envMapIntensity: 0.5,\r\n        side: THREE.DoubleSide,\r\n\r\n        uniforms: uniforms,\r\n    })\r\n    const slicedDepthMaterial = new CustomShaderMaterial({\r\n        // CSM   \r\n        baseMaterial: THREE.MeshDepthMaterial,\r\n        vertexShader: vertexShader,\r\n        fragmentShader: fragmentShader,\r\n        uniforms: uniforms,\r\n        silent: true,\r\n        patchMap: patchMap,\r\n\r\n        //mesh Standard Material\r\n        depthPacking: THREE.RGBADepthPacking,\r\n\r\n\r\n    })\r\n    gearModel.scene.traverse((child) => {\r\n        if (child.isMesh) {\r\n            if (child.name == \"outerHull\") {\r\n                child.material = slicedMaterial;\r\n                child.customDepthMaterial = slicedDepthMaterial;\r\n            } else {\r\n                console.log(child.name);\r\n                child.material = material;\r\n            }\r\n            child.castShadow = true;\r\n            child.receiveShadow = true;\r\n        }\r\n    })\r\n    useFrame(() => {\r\n        sizes.width = window.innerWidth;\r\n        sizes.height = window.innerHeight;\r\n        uniforms.uTime.value += 0.01;\r\n        if (gearModelRef.current) gearModelRef.current.rotation.y += 0.001;\r\n    })\r\n    return (\r\n        <>\r\n            <spotLight position={[3, 2, 0]} intensity={400} castShadow />\r\n            <primitive ref={gearModelRef} object={gearModel.scene} castShadow position-z={0} scale={1} />\r\n            <mesh position={[-5, -0.5, 0]} rotation={[0, Math.PI / 2, 0]} receiveShadow >\r\n                <planeGeometry args={[10, 10, 32, 32]} />\r\n                <meshStandardMaterial side={THREE.DoubleSide} color={new THREE.Color(\"#ffffff\")} />\r\n            </mesh>\r\n        </>\r\n    )\r\n}"],"names":["vertex_default","fragment_default","SlicedModel","controls","useControls","uniforms","THREE.Uniform","patchMap","gearModelRef","useRef","gearModel","useGLTF","material","THREE.MeshStandardMaterial","THREE.Color","slicedMaterial","CustomShaderMaterial","vertexShader","fragmentShader","THREE.DoubleSide","slicedDepthMaterial","THREE.MeshDepthMaterial","THREE.RGBADepthPacking","child","useFrame","jsxs","Fragment","jsx"],"mappings":"uKAAA,IAAAA,EAAA;AAAA;AAAA;AAAA,GCAAC,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GCSA,SAAwBC,GAAc,CAMlC,MAAMC,EAAWC,EAAY,CACzB,WAAY,CAAE,MAAO,EAAK,IAAK,CAAE,KAAK,GAAI,IAAK,KAAK,EAAG,EACvD,SAAU,CAAE,MAAO,IAAK,IAAK,EAAG,IAAK,KAAK,GAAK,CAAE,CAAA,CACpD,EACKC,EAAW,CACb,MAAO,IAAIC,EAAc,CAAC,EAC1B,YAAa,IAAIA,EAAcH,EAAS,UAAU,EAClD,UAAW,IAAIG,EAAcH,EAAS,QAAQ,CAClD,EACMI,EAAW,CACb,UAAW,CACP,iCACI;AAAA;AAAA;AAAA;AAAA;AAAA,aAAA,CAOZ,EAEMC,EAAeC,EAAAA,OAAO,EACtBC,EAAYC,EAAQ,uBAAuB,EAC3CC,EAAW,IAAIC,EAA2B,CAC5C,MAAO,IAAIC,EAAY,SAAS,EAChC,UAAW,IACX,UAAW,GACX,gBAAiB,EAAA,CACpB,EACKC,EAAiB,IAAIC,EAAqB,CAE5C,aAAcJ,EAAA,aACdK,EAAA,eACAC,EACA,OAAQ,GACR,SAAAX,EAGA,MAAO,IAAIO,EAAY,SAAS,EAChC,UAAW,IACX,UAAW,GACX,gBAAiB,GACjB,KAAMK,EAEN,SAAAd,CAAA,CACH,EACKe,EAAsB,IAAIJ,EAAqB,CAEjD,aAAcK,EAAM,aACpBJ,EAAA,eACAC,EACA,SAAAb,EACA,OAAQ,GACR,SAAAE,EAGA,aAAce,CAAM,CAGvB,EACS,OAAAZ,EAAA,MAAM,SAAUa,GAAU,CAC5BA,EAAM,SACFA,EAAM,MAAQ,aACdA,EAAM,SAAWR,EACjBQ,EAAM,oBAAsBH,IAEpB,QAAA,IAAIG,EAAM,IAAI,EACtBA,EAAM,SAAWX,GAErBW,EAAM,WAAa,GACnBA,EAAM,cAAgB,GAC1B,CACH,EACDC,EAAS,IAAM,CAGXnB,EAAS,MAAM,OAAS,IACpBG,EAAa,UAAsBA,EAAA,QAAQ,SAAS,GAAK,KAAA,CAChE,EAGOiB,EAAA,KAAAC,WAAA,CAAA,SAAA,CAACC,EAAAA,IAAA,YAAA,CAAU,SAAU,CAAC,EAAG,EAAG,CAAC,EAAG,UAAW,IAAK,WAAU,EAAC,CAAA,EAC1DA,EAAAA,IAAA,YAAA,CAAU,IAAKnB,EAAc,OAAQE,EAAU,MAAO,WAAU,GAAC,aAAY,EAAG,MAAO,CAAG,CAAA,SAC1F,OAAK,CAAA,SAAU,CAAC,GAAI,IAAM,CAAC,EAAG,SAAU,CAAC,EAAG,KAAK,GAAK,EAAG,CAAC,EAAG,cAAa,GACvE,SAAA,CAAAiB,MAAC,iBAAc,KAAM,CAAC,GAAI,GAAI,GAAI,EAAE,EAAG,EACvCA,MAAC,uBAAqB,CAAA,KAAMR,EAAkB,MAAO,IAAIL,EAAY,SAAS,CAAG,CAAA,CAAA,CACrF,CAAA,CAAA,EACJ,CAER"}