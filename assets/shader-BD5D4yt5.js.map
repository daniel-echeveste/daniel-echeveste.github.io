{"version":3,"file":"shader-BD5D4yt5.js","sources":["../../src/shaders/ragingSea/shader.jsx"],"sourcesContent":["// CustomShaderMaterial.js\r\nimport * as THREE from \"three\";\r\nimport { OrbitControls, Float, Text, useGLTF, shaderMaterial, Sky } from '@react-three/drei'\r\nimport { useMemo, useState, useRef,} from 'react'\r\nimport { useFrame, extend } from '@react-three/fiber'\r\nimport testVertexShader from './vertex.glsl'\r\nimport testFragmentShader from './fragment.glsl'\r\nimport { useControls } from \"leva\";\r\n\r\n\r\nexport default function ragingSea() {\r\n    const mesh = useRef()\r\n\r\n    const controls = useControls({\r\n        uDepthColor:'#e5735e',\r\n        uSurfaceColor:'#000000',\r\n        uBigWavesElevation:\r\n        {\r\n            value: 0.2,\r\n            min: 0,\r\n            max: 1,\r\n            step:0.1\r\n        },\r\n        uBigWavesFrequency:\r\n        {\r\n            value:new THREE.Vector2(4, 1.2),\r\n        },\r\n        uBigWavesSpeed:\r\n        {\r\n            value:0.8,\r\n            min: 0,\r\n            max: 10,\r\n            step:0.1\r\n        },\r\n        uColorOffset: 0.8,\r\n        uColorMultiplier: 5.0,\r\n        uSmallWavesElevation: { value: 0.15 },\r\n        uSmallWavesFrequency: { value: 3 },\r\n        uSmallWavesSpeed: { value: 0.2 },\r\n        uSmallIterations: { value: 3 },\r\n    })\r\n   console.log(controls);\r\n   \r\n    useFrame((state, delta) => {\r\n        shaderMaterial.uniforms.uTime.value = state.clock.elapsedTime;\r\n    })\r\n    const textureLoader = new THREE.TextureLoader()\r\n    const flagTexture = textureLoader.load('/textures/can-flag.jpg')\r\n\r\n    const shaderMaterial = new THREE.ShaderMaterial({\r\n        vertexShader: testVertexShader,\r\n        fragmentShader: testFragmentShader,\r\n        side: THREE.DoubleSide,\r\n        uniforms:\r\n        {\r\n            uFrequency: { value: new THREE.Vector2(10, 7) },\r\n            uTime: { value: 0 },\r\n            uColor: { value: new THREE.Color('orange') },\r\n            uTexture: { value: flagTexture },\r\n            uBigWavesElevation: {value: controls.uBigWavesElevation},\r\n            uBigWavesFrequency: {value: controls.uBigWavesFrequency},\r\n            uBigWavesSpeed: {value: controls.uBigWavesSpeed},\r\n            uDepthColor: {value: new THREE.Color(controls.uDepthColor)},\r\n            uSurfaceColor: {value: new THREE.Color(controls.uSurfaceColor)},\r\n            uColorOffset: {value:0.25},\r\n            uColorMultiplier: {value:2.0},\r\n            uSmallWavesElevation: {value:controls.uSmallWavesElevation },\r\n            uSmallWavesFrequency: { value:controls.uSmallWavesFrequency  },\r\n            uSmallWavesSpeed: {  value:controls.uSmallWavesSpeed},\r\n            uSmallIterations: { value:controls.uSmallIterations },\r\n        }\r\n    })\r\n    const geometry = new THREE.PlaneGeometry(2, 2, 500, 500)\r\n\r\n    extend({ shaderMaterial });\r\n\r\n    return <>\r\n   \r\n        <mesh\r\n            geometry={geometry}\r\n            material={shaderMaterial}\r\n            useRef={mesh}\r\n            rotation={[Math.PI / 2, 0, 0]}\r\n            position={[0, -0.6, 2]}\r\n            scale={new THREE.Vector3(4, 3, 1)} \r\n>\r\n        </mesh>\r\n    </>\r\n}\r\n\r\n\r\n"],"names":["ragingSea","mesh","useRef","controls","useControls","THREE.Vector2","useFrame","state","delta","shaderMaterial","flagTexture","THREE.TextureLoader","THREE.ShaderMaterial","testVertexShader","testFragmentShader","THREE.DoubleSide","THREE.Color","geometry","THREE.PlaneGeometry","extend","jsx","Fragment","THREE.Vector3"],"mappings":"8HAUA,SAAwBA,GAAY,CAChC,MAAMC,EAAOC,EAAAA,OAAO,EAEdC,EAAWC,EAAY,CACzB,YAAY,UACZ,cAAc,UACd,mBACA,CACI,MAAO,GACP,IAAK,EACL,IAAK,EACL,KAAK,EACT,EACA,mBACA,CACI,MAAM,IAAIC,EAAc,EAAG,GAAG,CAClC,EACA,eACA,CACI,MAAM,GACN,IAAK,EACL,IAAK,GACL,KAAK,EACT,EACA,aAAc,GACd,iBAAkB,EAClB,qBAAsB,CAAE,MAAO,GAAK,EACpC,qBAAsB,CAAE,MAAO,CAAE,EACjC,iBAAkB,CAAE,MAAO,EAAI,EAC/B,iBAAkB,CAAE,MAAO,CAAE,CAAA,CAChC,EACF,QAAQ,IAAIF,CAAQ,EAEVG,EAAA,CAACC,EAAOC,IAAU,CACvBC,EAAe,SAAS,MAAM,MAAQF,EAAM,MAAM,WAAA,CACrD,EAEK,MAAAG,EADgB,IAAIC,EAAoB,EACZ,KAAK,wBAAwB,EAEzDF,EAAiB,IAAIG,EAAqB,CAC5C,aAAcC,EACd,eAAgBC,EAChB,KAAMC,EACN,SACA,CACI,WAAY,CAAE,MAAO,IAAIV,EAAc,GAAI,CAAC,CAAE,EAC9C,MAAO,CAAE,MAAO,CAAE,EAClB,OAAQ,CAAE,MAAO,IAAIW,EAAY,QAAQ,CAAE,EAC3C,SAAU,CAAE,MAAON,CAAY,EAC/B,mBAAoB,CAAC,MAAOP,EAAS,kBAAkB,EACvD,mBAAoB,CAAC,MAAOA,EAAS,kBAAkB,EACvD,eAAgB,CAAC,MAAOA,EAAS,cAAc,EAC/C,YAAa,CAAC,MAAO,IAAIa,EAAYb,EAAS,WAAW,CAAC,EAC1D,cAAe,CAAC,MAAO,IAAIa,EAAYb,EAAS,aAAa,CAAC,EAC9D,aAAc,CAAC,MAAM,GAAI,EACzB,iBAAkB,CAAC,MAAM,CAAG,EAC5B,qBAAsB,CAAC,MAAMA,EAAS,oBAAqB,EAC3D,qBAAsB,CAAE,MAAMA,EAAS,oBAAsB,EAC7D,iBAAkB,CAAG,MAAMA,EAAS,gBAAgB,EACpD,iBAAkB,CAAE,MAAMA,EAAS,gBAAiB,CAAA,CACxD,CACH,EACKc,EAAW,IAAIC,EAAoB,EAAG,EAAG,IAAK,GAAG,EAEhD,OAAAC,EAAA,CAAE,eAAAV,EAAgB,EAIrBW,MAAAC,EAAAA,SAAA,CAAA,SAAAD,EAAA,IAAC,OAAA,CACG,SAAAH,EACA,SAAUR,EACV,OAAQR,EACR,SAAU,CAAC,KAAK,GAAK,EAAG,EAAG,CAAC,EAC5B,SAAU,CAAC,EAAG,IAAM,CAAC,EACrB,MAAO,IAAIqB,EAAc,EAAG,EAAG,CAAC,CAAA,CAAA,EAGxC,CACJ"}